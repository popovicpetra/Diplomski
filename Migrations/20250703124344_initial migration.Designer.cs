// <auto-generated />
using System;
using DiplomskiBackend.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiplomskiBackend.Migrations
{
    [DbContext(typeof(DiplomskiDbContext))]
    [Migration("20250703124344_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiplomskiBackend.Model.Editor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Editor");
                });

            modelBuilder.Entity("DiplomskiBackend.Model.Izdanje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrojIzdanja")
                        .HasColumnType("int");

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Izdanje");
                });

            modelBuilder.Entity("DiplomskiBackend.Model.Lektor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lektor");
                });

            modelBuilder.Entity("DiplomskiBackend.Model.Rad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EditorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IzdanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LektorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TehnickiSaradnikId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TehnickiSekretarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TehnickiUrednikId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EditorId");

                    b.HasIndex("IzdanjeId");

                    b.HasIndex("LektorId");

                    b.HasIndex("TehnickiSaradnikId");

                    b.HasIndex("TehnickiSekretarId");

                    b.HasIndex("TehnickiUrednikId");

                    b.ToTable("Rad");
                });

            modelBuilder.Entity("DiplomskiBackend.Model.TehnickiSaradnik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TehnickiSaradnik");
                });

            modelBuilder.Entity("DiplomskiBackend.Model.TehnickiSekretar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TehnickiSekretar");
                });

            modelBuilder.Entity("DiplomskiBackend.Model.TehnickiUrednik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TehnickiUredniks");
                });

            modelBuilder.Entity("DiplomskiBackend.Model.Rad", b =>
                {
                    b.HasOne("DiplomskiBackend.Model.Editor", "Editor")
                        .WithMany()
                        .HasForeignKey("EditorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiBackend.Model.Izdanje", "Izdanje")
                        .WithMany()
                        .HasForeignKey("IzdanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiBackend.Model.Lektor", "Lektor")
                        .WithMany()
                        .HasForeignKey("LektorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiBackend.Model.TehnickiSaradnik", "TehnickiSaradnik")
                        .WithMany()
                        .HasForeignKey("TehnickiSaradnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiBackend.Model.TehnickiSekretar", "TehnickiSekretar")
                        .WithMany()
                        .HasForeignKey("TehnickiSekretarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiBackend.Model.TehnickiUrednik", "TehnickiUrednik")
                        .WithMany()
                        .HasForeignKey("TehnickiUrednikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editor");

                    b.Navigation("Izdanje");

                    b.Navigation("Lektor");

                    b.Navigation("TehnickiSaradnik");

                    b.Navigation("TehnickiSekretar");

                    b.Navigation("TehnickiUrednik");
                });
#pragma warning restore 612, 618
        }
    }
}
